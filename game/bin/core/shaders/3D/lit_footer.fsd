void main () {
        //- properties
    vec3 norm = normalize(_Normal);
    vec3 view_dir = normalize(camera_pos - _Frag_Pos);

        //- directional light
    vec3 result = calc_dir_light(dir_light, norm, view_dir);
        //- point light
    for (int i = 0; i < MAX_NUM_POINT_LIGHTS; i++) {
        if (i < num_of_point_lights) {
            result += calc_point_light(point_lights[i], norm, _Frag_Pos, view_dir);
        }
    }
    // apply gamma correction
    float gamma = 2.2;
    result.rgb = pow(result.rgb, vec3(1.0/gamma));

    FragColour = vec4(result, 1.0);
}