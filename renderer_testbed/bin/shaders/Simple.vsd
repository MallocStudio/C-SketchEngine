#version 450

layout ( location = 0 ) in vec3 Position;
layout ( location = 1 ) in vec4 Colour;
layout ( location = 2 ) in vec3 Normal;
layout ( location = 3 ) in vec2 TexCoord;

layout ( location = 4 ) in vec3 Tangent;
layout ( location = 5 ) in vec3 Bitangent;

uniform mat4 projection_view_model;
uniform mat4 model_matrix;

out vec4 _Colour;
out vec2 _TexCoord;
out vec3 _Normal;
out vec3 _Position;
out vec3 _Tangent;
out vec3 _Bitangent;

void main() {
	_Position = (model_matrix * vec4(Position, 1.0)).xyz;
	_Colour = Colour;//(vec4(Normal, 0.0) + 1) * 0.5;
	_Normal = Normal;
	_TexCoord = TexCoord;
	_Tangent = Tangent;
	_Bitangent = Bitangent;

	gl_Position = projection_view_model * vec4(Position, 1.0);
}